<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCapNhat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABAtJREFUaEPtmVtIFFEcxt3KCrrQ/WIkPViR0Hpb3W0VlqLspYtkdo8uRL1E9WBR
        vQgRFIRKQm/RBYJKkgoqeuqumBQJQb0UEYWZISERlZfq99f/xDSttc7M5g71wcfZOZfv/52ZM2fOOZvU
        n8jOzl4UCARW6aX3QAdqYBudmKpZ3kFeXt7InJycD/AbnbhM1oCeEo8A4wvgV+mApqu1yBvgrlepeYMt
        WVlZKVqc+MDwC0sHjKHUf8jMzByPiblwH4ZOwuv8boD1sBZeIq+S9IBh2kpe6PUq93eQnp4+mKDzMXUB
        fsKEMa5tEY1mv98/QeXjCwLmE/AhaZfZhAusQT5+s5JMgRivgp1Rgjsmuh081WIN5y4IkEqAR9agbpMY
        rXCyhnUHubm5YxF/Yg0WR54nrK8nukMEg8GJCDZaAsSb8m4VqQX7SEtLG8LjvGsR76Y+6np+HyHdAguZ
        TiNcL+X3BngY3oSt5naxknZNjmclRHYjZp4ev5LXwJdznQwrqvzxMUs9XsyDJo2YSawdKtN30Hg2/GwS
        uwHnUdTnsUm7Xj9gVlK3HV6xG6sbCCUjcFsFm+SOk217fkbjvtlkNFKnjfQUw3A6TZy9wNJ7xORFqpZl
        gmbbQigUGoNer98NMQ4PZ2RkTNEmjuFD8CrcpdeOwNNb2Yvx56R7MT5Kq7oDEUQ8pJeOgclqk2l5Eo2k
        a2UtpVUSF5gcjuHXUGYvmVJlaCZrceIDs6nwHMNojmZ5DjKbOJtR/uNfQllZmbeOSAwUFBSMZr1Txgu7
        R7M8AR+mZzI1VmC8+6CK6yValriIRCKDWGEGMCzHg+1iXPklHA6P0GqOgG4QursrA7LEKIT3YIfJuME7
        Ws8JfLJwRKuupKRkoOY5g3xNMbwG0Qcms7+QOqXaxBZ4qpPQOI1WF+lGzbYPhMYhtBM28/u3Zz7UaefO
        zdKmfQLtk2m7jPStaj12dPdlD4xIOYx5K0jdV7wbQ1UiZtAuBGvRMM6XZAOVr8X2gOBTFYuZtHnJXVws
        w01leoOP1e406m+hXV0UnQqtZx8yFSJm58RNhplMp7cwcgiW8nsbepvhfq6Pw+fQPHP9IPn1coigNhxh
        AGJnowWJF4n3TIauxncOnRHeRAvmNokjO7NUDe0eEC2Cbh/e/kTMN8jN0pDugyBnrEHdIMY7YLnf7x+m
        oeIDZpYUArZYDdglpjvhNejanvuPYAYpJrjt43TMfoQyziu54zOQ/LtLbvkqYuCi1ZjyBB2MUL4Vylno
        UfKOkZaTbiddSCr74v7dyOt/YLKkMJvvwnxYqyQ+6MAKMW10gOumGL68iQMdSvJvo/EEqrXIO2DITKUT
        77QDyzXbW8D4avg+7nN4HCG7pk2S9lz2B5KSvgPH6cFzWT6QogAAAABJRU5ErkJggg==
</value>
  </data>
</root>